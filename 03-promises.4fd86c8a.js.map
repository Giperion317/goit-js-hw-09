{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SA0CA,SAASC,EAAcC,EAAUC,GAC/B,IAAMC,EAAgBC,KAAKC,SAAW,GACtC,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3BC,YAAW,WACLN,EACFI,EAAQ,CAAEN,WAAUC,UAEpBM,EAAO,CAAEP,WAAUC,YAEpBA,MAjDPQ,EAAAZ,GAASa,OAAOC,KAAK,CACnBC,MAAO,QACPZ,SAAU,aACVa,SAAU,OACVC,aAAc,OACdC,QAAS,MAGEC,SAASC,cAAc,SAE/BC,iBAAiB,UAEtB,SAAsBC,GACpBA,EAAMC,iBAEN,IAAIC,EAAQC,OAAOH,EAAMI,cAAcC,SAASvB,MAAMwB,OAChDC,EAAOJ,OAAOH,EAAMI,cAAcC,SAASE,KAAKD,OAChDE,EAASL,OAAOH,EAAMI,cAAcC,SAASG,OAAOF,OAE1D,GAAIJ,EAAQ,GAAKK,EAAO,GAAKC,EAAS,EACpC,OAAOlB,EAAAZ,GAASa,OAAOkB,QAAQ,wBAGjC,IAAK,IAAIC,EAAW,EAAGA,GAAYF,EAAQE,GAAY,EACrD9B,EAAc8B,EAAUR,GACrBS,MAAK,SAAAC,G,IAAG/B,EAAQ+B,EAAR/B,SAAUC,EAAK8B,EAAL9B,MACjBQ,EAAAZ,GAASa,OAAOsB,QACd,uBAAwCC,OAAfjC,EAAS,QAAYiC,OAANhC,EAAM,UAGjDiC,OAAM,SAAAH,G,IAAG/B,EAAQ+B,EAAR/B,SAAUC,EAAK8B,EAAL9B,MAClBQ,EAAAZ,GAASa,OAAOkB,QACd,sBAAqCK,OAAfjC,EAAS,QAAYiC,OAANhC,EAAM,UAGjDoB,GAASK,EACTP,EAAMI,cAAcY,W","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nNotiflix.Notify.init({\n  width: '300px',\n  position: 'center-top',\n  distance: '10px',\n  borderRadius: '10px',\n  timeout: 5000,\n});\n\nconst form = document.querySelector('.form');\n\nform.addEventListener('submit', onFormSabmit);\n\nfunction onFormSabmit(event) {\n  event.preventDefault();\n\n  let delay = Number(event.currentTarget.elements.delay.value);\n  const step = Number(event.currentTarget.elements.step.value);\n  const amount = Number(event.currentTarget.elements.amount.value);\n\n  if (delay < 0 || step < 0 || amount < 0) {\n    return Notiflix.Notify.failure('Invalid form values!');\n  }\n\n  for (let position = 1; position <= amount; position += 1) {\n    createPromise(position, delay)\n      .then(({ position, delay }) => {\n        Notiflix.Notify.success(\n          `✅ Fulfilled promise ${position} in ${delay}ms`\n        );\n      })\n      .catch(({ position, delay }) => {\n        Notiflix.Notify.failure(\n          `❌ Rejected promise ${position} in ${delay}ms`\n        );\n      });\n    delay += step;\n    event.currentTarget.reset();\n  }\n}\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n"],"names":["$iU1Pc","parcelRequire","$ce04d3a99e08e73b$var$createPromise","position","delay","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","$parcel$interopDefault","Notify","init","width","distance","borderRadius","timeout","document","querySelector","addEventListener","event","preventDefault","delay1","Number","currentTarget","elements","value","step","amount","failure","position1","then","param","success","concat","catch","reset"],"version":3,"file":"03-promises.4fd86c8a.js.map"}